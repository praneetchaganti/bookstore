{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addbook/addbook.component.css","webpack:///./src/app/addbook/addbook.component.html","webpack:///./src/app/addbook/addbook.component.ts","webpack:///./src/app/addbook/addbook.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/categories/categories.component.css","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/register/register.ts","webpack:///./src/app/service/bookstore.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n\\n      <form #myFrm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          Author aid :\\n          <input type=\\\"text\\\" #aid=\\\"ngModel\\\" [(ngModel)]=\\\"ath.aid\\\" name=\\\"aid\\\" class=\\\"form-control\\\" required />\\n          <span *ngIf=\\\"aid.errors && (aid.touched || aid.dirty)\\\">\\n            <span [hidden]=\\\"!aid.errors.required\\\">id Required..</span>\\n          </span>\\n        </div>\\n        <div>\\n          Auhtor aname :\\n          <input type=\\\"text\\\" #aname=\\\"ngModel\\\" [(ngModel)]=\\\"ath.aname\\\" name=\\\"aname\\\" class=\\\"form-control\\\" required/>\\n          <span *ngIf=\\\"aname.errors && (aname.touched || aname.dirty)\\\">name Required</span>\\n        </div>\\n        <div>\\n          Auhtor Image :\\n          <br/>\\n          <img [src]=\\\"ath.aimage\\\" width=\\\"150\\\" height=\\\"150\\\">\\n          <input (change)=\\\"onFileSelect($event)\\\" type=\\\"File\\\" class=\\\"form-control\\\" />\\n        </div>\\n        <div>\\n          Num of Books :\\n          <input type=\\\"text\\\" #totbooks=\\\"ngModel\\\" [(ngModel)]=\\\"ath.totbooks\\\" name=\\\"totbooks\\\" class=\\\"form-control\\\" />\\n        </div>\\n\\n        <div>\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"btnAddAuthClick(myFrm)\\\">Add book</button>\\n        </div>\\n\\n        <div>\\n          {{aid.valid}}| {{aid.errors|json}}\\n        </div>\\n      </form>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, DoCheck, OnChanges } from '@angular/core';\nimport { author } from './addbook';\nimport { BookstoreService } from '../service/bookstore.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-addbook',\n  templateUrl: './addbook.component.html',\n  styleUrls: ['./addbook.component.css']\n})\nexport class AddbookComponent implements OnInit {\n\n  ath: author;\n  BookstoreService: any;\n  constructor(private bs: BookstoreService, private router: Router) {\n    this.ath = new author();\n  }\n\n  onFileSelect(event) {\n    if(event.target.files && event.target.files[0]) {\n      var rdr = new FileReader();\n      rdr.readAsDataURL(event.target.files[0])\n      rdr.onload = (ev: any) => {\n        this.ath.aimage = ev.target.result;\n\n      }\n    }\n  }\n\n  btnAddAuthClick(frm: any) {\n    this.ath.aimage = this.ath.aimage.replace('data:image/gif;base64,', '')\n    this.ath.aimage = this.ath.aimage.replace('data:image/jpeg;base64,', '')\n    this.ath.aimage = this.ath.aimage.replace('data:image/png;base64,', '')\n\n\n    this.bs.Addauthor(this.ath).subscribe(\n      (data) => {\n        console.log(data);\n        alert('Saved Success...')\n        this.router.navigate(['home'])\n      }\n    )\n\n  }\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n\n","export class author{\r\n    aid:number\r\n    aname: string;\r\n    totbooks: number;   \r\n     aimage : string;\r\n\r\n} \r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark sticky-top\\\">\\n  <!-- Brand -->\\n\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"home\\\">BOOK STORE</a>\\n\\n  <!-- Links -->\\n  <ul class=\\\"navbar-nav \\\">\\n\\n<!-- \\n    <li *ngIf=\\\"lgs\\\" class=\\\"nav-item\\\">\\n      <form class=\\\"form-inline\\\" action=\\\"\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n        <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Search</button>\\n      </form>\\n    </li> -->\\n\\n    <!-- Dropdown -->\\n    <!-- <li class=\\\"nav-item dropdown\\\">\\n      <a class=\\\"nav-link dropdown-toggle\\\" routerLink=\\\"categories\\\" id=\\\"navbardrop\\\" data-toggle=\\\"dropdown\\\">\\n        CATEGORIES\\n      </a>\\n      <div class=\\\"dropdown-menu\\\">\\n        <a class=\\\"dropdown-item\\\" routerLink=\\\"#\\\">ARCHITECT</a>\\n        <a class=\\\"dropdown-item\\\" routerLink=\\\"#\\\">ART</a>\\n        <a class=\\\"dropdown-item\\\" routerLink=\\\"#\\\">CRIME</a>\\n        <a class=\\\"dropdown-item\\\" routerLink=\\\"#\\\">DESIGN</a>\\n      </div>\\n    </li> -->\\n\\n\\n  </ul>\\n\\n  <ul class=\\\"nav navbar-nav \\\">\\n    <li  *ngIf=\\\"lgs\\\" class=\\\"nav-item \\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"addbooks\\\">add books</a>\\n    </li>\\n\\n\\n    <li *ngIf=\\\"lgs\\\" class=\\\"nav-item \\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"home\\\">home</a>\\n    </li>\\n\\n    <li *ngIf=\\\"!lgs\\\" class=\\\"nav-item \\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"login\\\">Login</a>\\n    </li>\\n    \\n    <li *ngIf=\\\"lgs\\\" class=\\\"nav-item \\\">\\n      <a class=\\\"nav-link\\\" (click)=\\\"btnLogoutClick()\\\">Logout</a>\\n    </li>\\n\\n    <!-- <li *ngIf=\\\"lgs\\\" class=\\\"nav-item \\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"showdetails\\\">delete</a>\\n    </li> -->\\n\\n\\n\\n\\n    <li *ngIf=\\\"!lgs\\\" class=\\\"nav-item \\\">\\n\\n      <a class=\\\"nav-link\\\" routerLink=\\\"register\\\">register</a>\\n\\n    </li>\\n  </ul>\\n\\n</nav>\\n<br>\\n\\n\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport {login} from './login/login';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  [x: string]: any;\n  lgs: Observable<string>\n\n // log: login;\n\n  constructor(private router: Router) {\n   // this.log = new login()\n\n  }\n  ngOnInit() {\n  \n  }\n  checkLocalStorage(): Observable<any> {\n    return of(localStorage.getItem(\"uname\"));\n  }\n\n\n  btnLogoutClick() {\n    // localStorage.removeItem(\"username\")\n    alert(\"logging out\")\n    localStorage.clear();\n    this.router.navigate(['login'])\n  }\n\n  ngDoCheck() {\n    this.checkLocalStorage().subscribe((data) => { this.lgs = data })\n  }\n\n  // ngDoCheck() {\n  //   this.bs.CheckLogin(username.value,password.value).subscribe((data) => { this.lgs = data })\n  // }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\nimport {RouterModule,Routes} from \"@angular/router\";\nimport { CategoriesComponent } from './categories/categories.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport {FormsModule}  from '@angular/forms';\nimport { BookstoreService } from './service/bookstore.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddbookComponent } from './addbook/addbook.component';\n//import { ShowdetailsComponent } from './showdetails/showdetails.component';\n\nconst router : Routes= [\n {path:'home',component:HomeComponent},\n {path:'categories',component:HomeComponent},\n {path:'login',component:LoginComponent},\n {path:'register',component:RegisterComponent},\n{path:'addbooks',component:AddbookComponent},\n//{path:'showdetails',component:ShowdetailsComponent}\n\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CategoriesComponent,\n    LoginComponent,\n    RegisterComponent,\n    AddbookComponent,\n  \n  ],\n  imports: [\n    BrowserModule,RouterModule.forRoot(router),FormsModule,HttpClientModule,\n  ],\n  providers: [BookstoreService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  categories works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h4>Home Componet </h4>\\n\\n<div class=\\\"card-columns\\\">\\n    <div class=\\\"card\\\" style=\\\"width:20rem\\\" *ngFor=\\\"let ath of authorsList\\\">\\n        <div>\\n            <img  class=\\\"card-img-top\\\" width=\\\"150px\\\" height=\\\"150px\\\" [src]=\\\"ath.aimage\\\" alt=\\\"card image\\\" />\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <h3 class=\\\"text-primary\\\" #name>{{ath.aname}}</h3>\\n            <p>\\n                TotBooks :{{ath.totbooks}}<br/>\\n                \\n            </p>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"moredetailsClick(name)\\\">buy</button>\\n        </div>\\n    </div>\\n    \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BookstoreService } from '../service/bookstore.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  authorsList: any\n  constructor(private bs: BookstoreService) {\n  }\n\n  ngOnInit() {\n    this.bs.GetAllAuthor().subscribe((data) => { this.authorsList = data; console.log(data) });\n  }\n\n  moredetailsClick(name: any) {\n    this.bs.Checkmoredetails(name.value).subscribe((data) => {\n    \n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <form #myFrm=\\\"ngForm\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    username\\r\\n                    <input #username=\\\"ngModel\\\" #us type=\\\"text\\\" [(ngModel)]=\\\"log.username\\\" name=\\\"username\\\" class=\\\"form-control\\\" required/>\\r\\n                    \\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    password:\\r\\n                    <input #password=\\\"ngModel\\\" #pwd type=\\\"text\\\" [(ngModel)]=\\\"log.password\\\" name=\\\"password\\\" class=\\\"form-control\\\" required/>\\r\\n                    \\r\\n                </div>\\r\\n                <div>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"btnLogClick(us,pwd)\\\">login</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { login } from './login';\nimport { BookstoreService } from '../service/bookstore.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  log: login;\n  constructor(private bs: BookstoreService, private router: Router) {\n    this.log = new login()\n  }\n  btnLogClick(username: any, password: any) {\n\n    this.bs.CheckLogin(username.value, password.value).subscribe((data) => {\n      if (data.length > 0) {\n        localStorage.setItem(\"uname\", username.value)\n        this.router.navigate(['home'])\n      }\n      else {\n        alert('Invalid User...')\n      }\n    })\n  }\n    ngOnInit() {\n    }\n  \n}\n","export class login\r\n{\r\n    username:\"string\"\r\n    password:\"string\";\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <form #myFrm=\\\"ngForm\\\">\\n                <div class=\\\"form-group\\\">\\n                    username\\n                    <input #username=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"reg.username\\\" name=\\\"username\\\" class=\\\"form-control\\\" required/>\\n                    <span *ngIf=\\\"username.errors && (username.touched || username.dirty)\\\" style=\\\"color:red\\\">\\n                     <span [hidden]=\\\"!username.errors.required\\\">username Required ..</span>\\n\\n                    </span>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    password:\\n                    <input #password=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"reg.password\\\" name=\\\"password\\\" class=\\\"form-control\\\" required/>\\n                    <span *ngIf=\\\"password.errors && (password.touched || password.dirty)\\\" style=\\\"color:red\\\">\\n                      <span [hidden]=\\\"!password.errors.required\\\">password Required ..</span> \\n\\n                        </span>\\n\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    yourname :\\n                    <input #yourname=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"reg.yourname\\\" name=\\\"yourname\\\" class=\\\"form-control\\\" required/>\\n                    <span *ngIf=\\\"yourname.errors && (yourname.touched || yourname.dirty)\\\" style=\\\"color:red\\\">\\n                      <span [hidden]=\\\"!yourname.errors.required\\\">yourname Required ..</span> \\n\\n                        </span>\\n\\n                </div>\\n\\n                <div>\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"btnRegClick(myFrm)\\\">register</button>\\n                </div>\\n            </form>\\n        </div>\\n\\n\\n        <!-- <div>\\n                username Error : {username.errors|json}}\\n            </div>\\n            <div>\\n                Author Details : {{reg | json}}\\n            </div> -->\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookstoreService } from '../service/bookstore.service';\nimport { register } from './register';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  reg: register;\n\n  constructor(private bs: BookstoreService, private router: Router) {\n    this.reg = new register();\n  }\n  btnRegClick(myFrm: any) {\n\n    this.bs.CheckRegister(this.reg).subscribe((data) => {\n      console.log(data);\n      alert('Saved Success...')\n      this.router.navigate(['login'])\n\n    })\n  }\n\n  ngOnInit() {\n  }\n}\n\n\n","export class register {\r\n    username: string;\r\n    password: string;\r\n    yourname: string;\r\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { register } from '../register/register'\nimport { author } from '../addbook/addbook';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookstoreService {\n\n  url: string = \"http://localhost:4600\";\n  constructor(private htc: HttpClient) {\n  }\n\n  Checkmoredetails(u:string): Observable<any>\n  {\n    return this.htc.get(this.url+'/product/more/'+u)\n  }\n\n  GetProductById(i:string):Observable<any>\n  {\n    return this.htc.get(this.url+'/product/'+i)\n  }\n\n  GetAllAuthor(): Observable<any> {\n    return this.htc.get(this.url + '/product' + '/show', { responseType: 'json' })\n  }\n\n  Addauthor(athObj: author): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'content-type': 'application/json' })\n    }\n    return this.htc.post(this.url + '/admin' + '/add', JSON.stringify(athObj), httpOptions)\n  }\n\n\n\n  CheckLogin(u: string, p: string): Observable<any> {\n\n    return this.htc.get(this.url +'/product'+ '/' + u + '/' + p);\n  }\n\n  CheckRegister(reg: register): Observable<any> {\n    // let reg : register;\n    // reg = new register();\n    const httpOptions = {\n      headers: new HttpHeaders({ 'content-type': 'application/json' })\n    }\n    return this.htc.post(this.url+'/product', JSON.stringify(reg), httpOptions)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}